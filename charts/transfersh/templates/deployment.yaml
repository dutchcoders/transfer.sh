apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "transfersh.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "transfersh.name" . }}
    helm.sh/chart: {{ include "transfersh.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "transfersh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "transfersh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HTTP_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: HTTP_AUTH_USER
            - name: HTTP_AUTH_PASS
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: HTTP_AUTH_PASS
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: AWS_ACCESS_KEY
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: AWS_SECRET_KEY
            - name: AWS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: AWS_BUCKET_NAME              
            - name: AWS_BUCKET_REGION
              valueFrom:
                secretKeyRef:
                  name: transfersh-secrets
                  key: AWS_BUCKET_REGION
          args: ["--http-auth-user","$(HTTP_AUTH_USER)","--http-auth-pass","$(HTTP_AUTH_PASS)","--provider","s3","--aws-access-key","$(AWS_ACCESS_KEY)","--aws-secret-key","$(AWS_SECRET_KEY)","--bucket","$(AWS_BUCKET_NAME)","--s3-region","$(AWS_BUCKET_REGION)","--proxy-path","filemanager"]
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
