{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://vault.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Vault",
  "description": "Archiving and eDiscovery for G Suite.",
  "discoveryVersion": "v1",
  "documentationLink": "https://developers.google.com/vault",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "vault:v1",
  "kind": "discovery#restDescription",
  "name": "vault",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "pp": {
      "default": "true",
      "description": "Pretty-print response.",
      "location": "query",
      "type": "boolean"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "matters": {
      "methods": {
        "addPermissions": {
          "description": "Adds an account as a matter collaborator.",
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "httpMethod": "POST",
          "id": "vault.matters.addPermissions",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:addPermissions",
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "response": {
            "$ref": "MatterPermission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "close": {
          "description": "Closes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}:close",
          "httpMethod": "POST",
          "id": "vault.matters.close",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:close",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "create": {
          "description": "Creates a new matter with the given name and description. The initial state\nis open, and the owner is the method caller. Returns the created matter\nwith default view.",
          "flatPath": "v1/matters",
          "httpMethod": "POST",
          "id": "vault.matters.create",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/matters",
          "request": {
            "$ref": "Matter"
          },
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "delete": {
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "DELETE",
          "id": "vault.matters.delete",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}",
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "get": {
          "description": "Gets the specified matter.",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "GET",
          "id": "vault.matters.get",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "view": {
              "description": "Specifies which parts of the Matter to return in the response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "location": "query",
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}",
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ]
        },
        "list": {
          "description": "Lists matters the user has access to.",
          "flatPath": "v1/matters",
          "httpMethod": "GET",
          "id": "vault.matters.list",
          "parameterOrder": [],
          "parameters": {
            "pageSize": {
              "description": "The number of matters to return in the response.\nDefault and maximum are 100.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "The pagination token as returned in the response.",
              "location": "query",
              "type": "string"
            },
            "state": {
              "description": "If set, list only matters with that specific state. The default is listing\nmatters of all states.",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "location": "query",
              "type": "string"
            },
            "view": {
              "description": "Specifies which parts of the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "location": "query",
              "type": "string"
            }
          },
          "path": "v1/matters",
          "response": {
            "$ref": "ListMattersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ]
        },
        "removePermissions": {
          "description": "Removes an account as a matter collaborator.",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "httpMethod": "POST",
          "id": "vault.matters.removePermissions",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:removePermissions",
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "reopen": {
          "description": "Reopens the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}:reopen",
          "httpMethod": "POST",
          "id": "vault.matters.reopen",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:reopen",
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "undelete": {
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}:undelete",
          "httpMethod": "POST",
          "id": "vault.matters.undelete",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:undelete",
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "update": {
          "description": "Updates the specified matter.\nThis updates only the name and description of the matter, identified by\nmatter id. Changes to any other fields are ignored.\nReturns the default view of the matter.",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "PUT",
          "id": "vault.matters.update",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}",
          "request": {
            "$ref": "Matter"
          },
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        }
      },
      "resources": {
        "holds": {
          "methods": {
            "create": {
              "description": "Creates a hold in the given matter.",
              "flatPath": "v1/matters/{matterId}/holds",
              "httpMethod": "POST",
              "id": "vault.matters.holds.create",
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds",
              "request": {
                "$ref": "Hold"
              },
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            },
            "delete": {
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "DELETE",
              "id": "vault.matters.holds.delete",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            },
            "get": {
              "description": "Gets a hold by ID.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "GET",
              "id": "vault.matters.holds.get",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "view": {
                  "description": "Specifies which parts of the Hold to return.",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "list": {
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse\ndenotes no more holds to list.",
              "flatPath": "v1/matters/{matterId}/holds",
              "httpMethod": "GET",
              "id": "vault.matters.holds.list",
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive.\nLeaving this empty, or as 0, is the same as page_size = 100.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the response.\nAn empty token means start from the beginning.",
                  "location": "query",
                  "type": "string"
                },
                "view": {
                  "description": "Specifies which parts of the Hold to return.",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds",
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "update": {
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts\nto a hold that covers an OU, nor can you add OUs to a hold that covers\nindividual accounts. Accounts listed in the hold will be ignored.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "PUT",
              "id": "vault.matters.holds.update",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "parameters": {
                "holdId": {
                  "description": "The ID of the hold.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "request": {
                "$ref": "Hold"
              },
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            }
          },
          "resources": {
            "accounts": {
              "methods": {
                "create": {
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that\nhas no held_org_unit set. Attempting to add an account to an OU-based\nhold will result in an error.",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "httpMethod": "POST",
                  "id": "vault.matters.holds.accounts.create",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ]
                },
                "delete": {
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with\nno held accounts, the hold will not apply to any accounts.",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "httpMethod": "DELETE",
                  "id": "vault.matters.holds.accounts.delete",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "parameters": {
                    "accountId": {
                      "description": "The ID of the account to remove from the hold.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "holdId": {
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ]
                },
                "list": {
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified\nheld accounts. If the hold is on an OU, then use\n\u003ca href=\"https://developers.google.com/admin-sdk/\"\u003eAdmin SDK\u003c/a\u003e\nto enumerate its members.",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "httpMethod": "GET",
                  "id": "vault.matters.holds.accounts.list",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20180403",
  "rootUrl": "https://vault.googleapis.com/",
  "schemas": {
    "AddMatterPermissionsRequest": {
      "description": "Add an account with the permission specified. The role cannot be owner.\nIf an account already has a role in the matter, it will be\noverwritten.",
      "id": "AddMatterPermissionsRequest",
      "properties": {
        "ccMe": {
          "description": "Only relevant if send_emails is true.\nTrue to CC requestor in the email message.\nFalse to not CC requestor.",
          "type": "boolean"
        },
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The MatterPermission to add."
        },
        "sendEmails": {
          "description": "True to send notification email to the added account.\nFalse to not send notification email.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CloseMatterRequest": {
      "description": "Close a matter by ID.",
      "id": "CloseMatterRequest",
      "properties": {},
      "type": "object"
    },
    "CloseMatterResponse": {
      "description": "Response to a CloseMatterRequest.",
      "id": "CloseMatterResponse",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state CLOSED."
        }
      },
      "type": "object"
    },
    "CorpusQuery": {
      "description": "Corpus specific queries.",
      "id": "CorpusQuery",
      "properties": {
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive."
        },
        "groupsQuery": {
          "$ref": "HeldGroupsQuery",
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups."
        },
        "hangoutsChatQuery": {
          "$ref": "HeldHangoutsChatQuery",
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be\nHangouts Chat."
        },
        "mailQuery": {
          "$ref": "HeldMailQuery",
          "description": "Details pertaining to mail holds. If set, corpus must be mail."
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "HeldAccount": {
      "description": "An account being held in a particular hold. This structure is immutable.\nThis can be either a single user or a google group, depending on the corpus.",
      "id": "HeldAccount",
      "properties": {
        "accountId": {
          "description": "The account's ID as provided by the\n\u003ca href=\"https://developers.google.com/admin-sdk/\"\u003eAdmin SDK\u003c/a\u003e.",
          "type": "string"
        },
        "holdTime": {
          "description": "When the account was put on hold.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldDriveQuery": {
      "description": "Query options for Drive holds.",
      "id": "HeldDriveQuery",
      "properties": {
        "includeTeamDriveFiles": {
          "description": "If true, include files in Team Drives in the hold.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HeldGroupsQuery": {
      "description": "Query options for group holds.",
      "id": "HeldGroupsQuery",
      "properties": {
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The search terms for the hold.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldHangoutsChatQuery": {
      "description": "Query options for hangouts chat holds.",
      "id": "HeldHangoutsChatQuery",
      "properties": {
        "includeRooms": {
          "description": "If true, include rooms the user has participated in.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HeldMailQuery": {
      "description": "Query options for mail holds.",
      "id": "HeldMailQuery",
      "properties": {
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The search terms for the hold.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldOrgUnit": {
      "description": "A organizational unit being held in a particular hold.\nThis structure is immutable.",
      "id": "HeldOrgUnit",
      "properties": {
        "holdTime": {
          "description": "When the org unit was put on hold. This property is immutable.",
          "format": "google-datetime",
          "type": "string"
        },
        "orgUnitId": {
          "description": "The org unit's immutable ID as provided by the Admin SDK.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Hold": {
      "description": "Represents a hold within Vault. A hold restricts purging of\nartifacts based on the combination of the query and accounts restrictions.\nA hold can be configured to either apply to an explicitly configured set\nof accounts, or can be applied to all members of an organizational unit.",
      "id": "Hold",
      "properties": {
        "accounts": {
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be\nempty.",
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array"
        },
        "corpus": {
          "description": "The corpus to be searched.",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT"
          ],
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat."
          ],
          "type": "string"
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "orgUnit": {
          "$ref": "HeldOrgUnit",
          "description": "If set, the hold applies to all members of the organizational unit and\naccounts must be empty. This property is mutable. For groups holds,\nset the accounts field."
        },
        "query": {
          "$ref": "CorpusQuery",
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus\ntype."
        },
        "updateTime": {
          "description": "The last time this hold was modified.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHeldAccountsResponse": {
      "description": "Returns a list of held accounts for a hold.",
      "id": "ListHeldAccountsResponse",
      "properties": {
        "accounts": {
          "description": "The held accounts on a hold.",
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHoldsResponse": {
      "description": "The holds for a matter.",
      "id": "ListHoldsResponse",
      "properties": {
        "holds": {
          "description": "The list of holds.",
          "items": {
            "$ref": "Hold"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.\nIf this is empty, then there are no more holds to list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListMattersResponse": {
      "description": "Provides the list of matters.",
      "id": "ListMattersResponse",
      "properties": {
        "matters": {
          "description": "List of matters.",
          "items": {
            "$ref": "Matter"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Matter": {
      "description": "Represents a matter.",
      "id": "Matter",
      "properties": {
        "description": {
          "description": "The description of the matter.",
          "type": "string"
        },
        "matterId": {
          "description": "The matter ID which is generated by the server.\nShould be blank when creating a new matter.",
          "type": "string"
        },
        "matterPermissions": {
          "description": "List of users and access to the matter. Currently there is no programmer\ndefined limit on the number of permissions a matter can have.",
          "items": {
            "$ref": "MatterPermission"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "state": {
          "description": "The state of the matter.",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MatterPermission": {
      "description": "Currently each matter only has one owner, and all others are collaborators.\nWhen an account is purged, its corresponding MatterPermission resources\ncease to exist.",
      "id": "MatterPermission",
      "properties": {
        "accountId": {
          "description": "The account id, as provided by \u003ca href=\"https://developers.google.com/admin-sdk/\"\u003eAdmin SDK\u003c/a\u003e.",
          "type": "string"
        },
        "role": {
          "description": "The user's role in this matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "id": "RemoveMatterPermissionsRequest",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest",
      "properties": {},
      "type": "object"
    },
    "ReopenMatterResponse": {
      "description": "Response to a ReopenMatterRequest.",
      "id": "ReopenMatterResponse",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state OPEN."
        }
      },
      "type": "object"
    },
    "UndeleteMatterRequest": {
      "description": "Undelete a matter by ID.",
      "id": "UndeleteMatterRequest",
      "properties": {},
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "G Suite Vault API",
  "version": "v1",
  "version_module": true
}